/**
 * Вспомогательный интерфейс описывает наличие локализованного
 * названия параметра.
 */
export interface Locales {
  ru?: string;
  en?: string;
}

/**
 * Вспомогательный интерфейс описывает данные, получаемые с сервера.
 */
export interface ParamsValue {
  /**
   * За сколько лет берутся данные. Интервал времени.
   * @example time="10"
   */
  time: string;
  /**
   * Минимальное из средних значений параметра.
   */
  avgmin?: string;
  /**
   *  Максимальное из средних значений параметра.
   */
  avgmax?: string;
  /**
   * Самое минимальное значение параметра за выбранный период.
   */
  extmin?: string;
  /**
   * Самое максимальное значение параметра за выбранный период.
   */
  extmax?: string;
  /**
   * Среднее значение параметра за выбранный период.
   */
  avg?: string;
}

/**
 * Вспомогательный интерфейс описывает данные, получаемые с сервера.
 */
export interface ClimateValue {
  [index: string]: ParamsValue[] | string;
  /**
   * Единица измерения параметра.
   * @example dim: "°"
   */
  dim: string;
  /**
   * Свойство содержит массив с данными за различные
   * интервалы времени. 10, 20 лет и т.д.
   */
  data: ParamsValue[];
}

/**
 * Интерфейс описывает данные, получаемые с сервера.
 * @property title - Название климатических данных на разных языках.
 * @property [def] - Опциональное свойство. Дополнительная информация
 * параметра, которая выводится под его названием.
 * @property value - Свойство содержит массив с данными, которые имеют разную размерность.
 */
export interface StoreClimateData {
  /**
   * Название климатических данных на разных языках.
   */
  title: Locales;
  /**
   * Дополнит ельная информация параметра, которая выводится
   * под его названием.
   * @example
   * def: { ru: "мм рт. ст." }
   * def: { ru: "вероятность" }
   */
  def?: Locales;
  /**
   * Свойство содержит массив с данными, которые имеют разную размерность.
   */
  value: ClimateValue[];
}

/**
 * Интерфейс описывает возвращаемое значение функции
 * которое зависит от состояния радио кнопки.
 */
export interface SelectRadioData {
  min: string;
  max: string;
  avg: string;
}

/**
 * Интерфейс описывает объект с данными передаваемые из
 * store в компоненты для отображения.
 * @property title - Название климатических данных на разных языках.
 * @property [def] - Дополнительная информация параметра, которая выводится
 * под его названием.
 * @property dim - Единица измерения параметра.
 * @property data - Свойство содержит объект с числовыми значениями
 * параметра в строковом формате.
 */
export interface WidgetClimateData {
  /**
   * Название климатических данных на разных языках.
   */
  title: string | undefined;
  /**
   * Дополнительная информация параметра, которая выводится
   * под его названием.
   */
  def?: string | undefined;
  /**
   * Единица измерения параметра.
   */
  dim: string;
  /**
   * Свойство содержит объект с числовыми значениями
   * параметра в строковом формате.
   */
  data: SelectRadioData;
}

/**
 * Интерфейс описывает объект, с данными для отрисовки прогресс бара.
 * @property class - CSS класс определяющий какую линию прогресс бара
 * будет рисовать компонента.
 * @property def - Строка, содержащая ряд команд пути для рисования
 * линии прогресс бара.
 */
export interface PathSVG {
  /**
   * CSS класс определяющий какую линию прогресс бара будет рисовать
   * компонента.
   */
  class: string;
  /**
   * Строка, содержащая ряд команд пути для рисования
   * линии прогресс бара.
   */
  def: string;
}

/**
 * Интерфейс описывает объект, который отвечает за
 * отображение блока с дополнительной информацией,
 * которая выводится под названием параметра.
 */
export interface SubtitleToProgressName {
  /**
   * Отвечает за отображение блока с дополнительной информацией,
   * которая выводится под названием параметра.
   * Если true, то блок отрисовывается.
   */
  isShow: boolean;
  /**
   * Текст с дополнительной информацией.
   */
  text?: string;
}

/**
 * Интерфейс описывающий строковые константы с учетом локали.
 * @property ru - Объект содержит строковые константы с учетом локали.
 * @property ru.prepositions - Массив содержит предлоги, которые
 * используются в подписи начальной и конечной точки прогресс бара.
 * @property ru.changeDimensionLocale - размерности, которые требуют
 * модификацию при отображении.
 * @property ru.radioBtnCaption - Массив с названиями radio button
 * в компоненте Navbar.vue.
 * @property ru.selectCaptions - Подписи селекта в компоненте Navbar.vue.
 * @property ru.noData - Фраза при отсутствии данных.
 * @property ru.navBarLink - Название ссылки для отображения подробной
 * информации.
 */
export interface ExpressionsLocales {
  /**
   * Объект содержит строковые константы с учетом локали.
   */
  ru: {
    /**
     * Массив содержит предлоги, которые
     * используются в подписи начальной и конечной точки прогресс бара.
     */
    prepositions: string[];
    /**
     * размерности, которые требуют модификацию при отображении.
     */
    changeDimensionLocale: string[];
    /**
     * Массив с названиями radio button в компоненте Navbar.vue.
     */
    radioBtnCaption: string[];
    /**
     * Подписи селекта в компоненте Navbar.vue.
     */
    selectCaptions: string[];
    /**
     * Фраза при отсутствии данных.
     */
    noData: string;
    /**
     * Название ссылки для отображения подробной информации.
     */
    navBarLink: string;
  };
}
